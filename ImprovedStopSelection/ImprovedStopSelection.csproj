<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net35</TargetFramework>
    <Product>Improved Stop Selection</Product>
    <LangVersion>9.0</LangVersion>
    <ManagedDLLPath>$(MSBuildProgramFiles32)/Steam/steamapps/common/Cities_Skylines/Cities_Data/Managed</ManagedDLLPath>
    <ExternalDLLPath>$(SolutionDir)/libs</ExternalDLLPath>
    <AssemblySearchPaths>
      $(AssemblySearchPaths);
      $(ManagedDLLPath);
      $(ExternalDLLPath)
    </AssemblySearchPaths>
    <Configurations>Beta Debug;Beta Release;Stable Debug;Stable Release</Configurations>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Stable Release' OR '$(Configuration)' == 'Stable Debug'">
    <Version>2.0</Version>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Beta Release' OR '$(Configuration)' == 'Beta Debug'">
    <Version>2.0</Version>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Stable Release|AnyCPU'">
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <DefineConstants />
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Stable Debug|AnyCPU'">
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <Optimize>false</Optimize>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <DefineConstants>DEBUG</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Beta Release|AnyCPU'">
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <DefineConstants>BETA</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Beta Debug|AnyCPU'">
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <Optimize>false</Optimize>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <DefineConstants>BETA, DEBUG</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="CitiesHarmony.API" Version="2.1.0" />
    <Reference Include="Assembly-CSharp">
      <Private>false</Private>
    </Reference>
    <Reference Include="ColossalManaged">
      <Private>false</Private>
    </Reference>
    <Reference Include="ICities">
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine">
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Stable Release' OR '$(Configuration)' == 'Stable Debug'">
    <!--<WorkshopId></WorkshopId>-->
    <Type>Stable</Type>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Beta Release' OR '$(Configuration)' == 'Beta Debug'">
    <!--<WorkshopId></WorkshopId>-->
    <Type>Beta</Type>
  </PropertyGroup>

  <PropertyGroup>
    <LocalDir>$(LOCALAPPDATA)\Colossal Order\Cities_Skylines\Addons\Mods\$(MSBuildProjectName)$(Type)</LocalDir>
    <WorkshopDir>C:\Program Files (x86)\Steam\steamapps\workshop\content\255710\$(WorkshopId)</WorkshopDir>
  </PropertyGroup>


  <Target Name="PdbToMdb" AfterTargets="Build">
    <ItemGroup>
      <FilesToDelete Include="$(OutDir)*.pdb" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" />
  </Target>

  <Target Name="DeployToLocal" AfterTargets="PdbToMdb">
    <Message Text="Deploy to local $(LocalDir)" Importance="high" />
    <RemoveDir Directories="$(LocalDir)" />
    <ItemGroup>
      <FilesToCopy Include="$(OutDir)\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(FilesToCopy)" DestinationFiles="@(FilesToCopy->'$(LocalDir)\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <!--<Target Name="DeployToWorkshop" AfterTargets="PdbToMdb" Condition="'$(Configuration)' == 'Stable Release' OR '$(Configuration)' == 'Beta Release'">
    <Message Text="Deploy to workshop $(WorkshopDir)" Importance="high" />
    <RemoveDir Directories="$(WorkshopDir)" />
    <Copy SourceFiles="@(FilesToCopy)" DestinationFiles="@(FilesToCopy->'$(WorkshopDir)\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="$(ProjectDir)..\Workshop\PreviewImage$(Type).png" DestinationFiles="$(WorkshopDir)\PreviewImage.png" />
  </Target>-->
  
</Project>